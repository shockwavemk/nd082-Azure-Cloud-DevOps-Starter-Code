{
	"info": {
		"_postman_id": "58eb6d9c-352d-11ee-be56-0242ac120002",
		"name": "DataValidationTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get activities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var expectedActivities = 30;",
							"pm.test(\"Found activities with IDs 1 - \" + expectedActivities, function () {",
							"    for (i = 0; i < expectedActivities; i++) {",
							"        pm.expect(jsonData[i].ID).to.eql(i+1);",
							"    }",
							"});",
							"pm.test(\"Activities found: \" + expectedActivities, function () {",
							"    pm.expect(jsonData.length).to.eql(expectedActivities);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Activities",
					"host": [
						"{{url}}"
					],
					"path": [
						"Activities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",							
							"var minimumAuthors = 200;",
							"pm.test(\"Found authors with IDs 1 - \" + minimumAuthors, function () {",
							"    for (i = 0; i < minimumAuthors; i++) {",
							"        pm.expect(jsonData[i].ID).to.eql(i+1);",
							"    }",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Authors",
					"host": [
						"{{url}}"
					],
					"path": [
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var expectedBooks = 200;",
							"",
							"pm.test(\"Found books with IDs 1 - \" + expectedBooks, function () {",
							"    for (i = 0; i < expectedBooks; i++) {",
							"        pm.expect(jsonData[i].ID).to.eql(i+1);",
							"    }",
							"});",
							"pm.test(\"Total books found: \" + expectedBooks, function () {",
							"    pm.expect(jsonData.length).to.eql(expectedBooks);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Books",
					"host": [
						"{{url}}"
					],
					"path": [
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All CoverPhotos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var expectedCoverPhotos = 200;",
							"pm.test(\"Found cover photos with IDs 1 - \" + expectedCoverPhotos, function () {",
							"    for (i = 0; i < expectedCoverPhotos; i++) {",
							"        pm.expect(jsonData[i].ID).to.eql(i+1);",
							"    }",
							"});",
							"pm.test(\"Total cover photos found: \" + expectedCoverPhotos, function () {",
							"    pm.expect(jsonData.length).to.eql(expectedCoverPhotos);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/CoverPhotos",
					"host": [
						"{{url}}"
					],
					"path": [
						"CoverPhotos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"var expectedUsers = 10;",
							"pm.test(\"Found users with IDs 1 - \" + expectedUsers, function () {",
							"    for (i = 0; i < expectedUsers; i++) {",
							"        pm.expect(jsonData[i].ID).to.eql(i+1);",
							"    }",
							"});",
							"pm.test(\"Total users found: \" + expectedUsers, function () {",
							"    pm.expect(jsonData.length).to.eql(expectedUsers);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Users",
					"host": [
						"{{url}}"
					],
					"path": [
						"Users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create activity response is as expected\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/Activities?activity=activity_c3",
					"host": [
						"{{url}}"
					],
					"path": [
						"Activities"
					],
					"query": [
						{
							"key": "activity",
							"value": "activity_c3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create author response is as expected\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/Authors?author=author_c3",
					"host": [
						"{{url}}"
					],
					"path": [
						"Authors"
					],
					"query": [
						{
							"key": "author",
							"value": "author_c3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create book response is as expected\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/Books?book=book_c3",
					"host": [
						"{{url}}"
					],
					"path": [
						"Books"
					],
					"query": [
						{
							"key": "book",
							"value": "book_c3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create CoverPhoto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create cover photo response is as expected\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/CoverPhotos?coverPhoto=cover_c3.jpeg",
					"host": [
						"{{url}}"
					],
					"path": [
						"CoverPhotos"
					],
					"query": [
						{
							"key": "coverPhoto",
							"value": "cover_c3.jpeg"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create user response is as expected\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/Users?user=user_c3",
					"host": [
						"{{url}}"
					],
					"path": [
						"Users"
					],
					"query": [
						{
							"key": "user",
							"value": "user_c3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Activity with ID 1 as expected\", function () {",
							"    pm.expect(jsonData.ID).to.eql(1);",
							"    pm.expect(jsonData.Title).to.eql(\"Activity 1\");",
							"    pm.expect(jsonData.Completed).to.eql(false);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Activities/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Activities",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Author with id 1 as expected\", function () {",
							"    pm.expect(jsonData.ID).to.eql(1);",
							"    pm.expect(jsonData.IDBook).to.eql(1);",
							"    pm.expect(jsonData.FirstName).to.eql(\"First Name 1\");",
							"    pm.expect(jsonData.LastName).to.eql(\"Last Name 1\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Authors/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Authors",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Book with ID 1 as expected\", function () {",
							"    pm.expect(jsonData.ID).to.eql(1);",
							"    pm.expect(jsonData.Title).to.eql(\"Book 1\");",
							"    pm.expect(jsonData.PageCount).to.eql(100);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Books/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get CoverPhoto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Cover Photo with id 1 as expected\", function () {",
							"    pm.expect(jsonData.ID).to.eql(1);",
							"    pm.expect(jsonData.IDBook).to.eql(1);",
							"    pm.expect(jsonData.Url).to.eql(\"https://placeholdit.imgix.net/~text?txtsize=33&txt=Book 1&w=250&h=350\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/CoverPhotos/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"CoverPhotos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"User with id 1 as expected\", function () {",
							"    pm.expect(jsonData.ID).to.eql(1);",
							"    pm.expect(jsonData.UserName).to.eql(\"User 1\");",
							"    pm.expect(jsonData.Password).to.eql(\"Password1\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Users/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update activity response is as expected\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/Activities/1?activity=activity_c3_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"Activities",
						"1"
					],
					"query": [
						{
							"key": "activity",
							"value": "activity_c3_2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update author response is as expected\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/Authors?author=author_c3_2&id=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Authors"
					],
					"query": [
						{
							"key": "author",
							"value": "author_c3_2"
						},
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update book response is as expected\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/Books?book=book_c3_2&id=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Books"
					],
					"query": [
						{
							"key": "book",
							"value": "book_c3_2"
						},
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update CoverPhoto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update cover photo response is as expected\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/CoverPhotos?coverPhoto=cover_c3_2.png&id=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"CoverPhotos"
					],
					"query": [
						{
							"key": "coverPhoto",
							"value": "cover_c3_2.png"
						},
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update user response is as expected\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/Users?user=user_c3_2&id=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Users"
					],
					"query": [
						{
							"key": "user",
							"value": "user_c3_2"
						},
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete activity response is as expected\", function () {",
							"    pm.expect(pm.response.text()).to.eql(\"\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/Activities/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Activities",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete author response is as expected\", function () {",
							"    pm.expect(pm.response.text()).to.eql(\"\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/Authors/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Authors",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete book response is as expected\", function () {",
							"    pm.expect(pm.response.text()).to.eql(\"\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/Books/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete CoverPhoto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete cover photo response is as expected\", function () {",
							"    pm.expect(pm.response.text()).to.eql(\"\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/CoverPhotos/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"CoverPhotos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete user response is as expected\", function () {",
							"    pm.expect(pm.response.text()).to.eql(\"\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/Users/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"Users",
						"1"
					]
				}
			},
			"response": []
		}
	]
}